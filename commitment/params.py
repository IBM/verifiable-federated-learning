# Copyright (C) 2022 Verifiable Federated Learning Authors
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

from __future__ import annotations

from Crypto import Random
from Crypto.Util import number

from commitment.encoder import Encoder


class Params(object):

    DEFAULT_KEYSIZE = 2048

    def __init__(self, g: int, h: int, q: int):
        self.g = g
        self.h = h
        self.q = q

    @staticmethod
    def generate_params(n_length: int = DEFAULT_KEYSIZE) -> Params:
        """
        Generates new public parameters for the protocol

        :param n_length:
        :return: ...
        """
        while True:
            try:
                p = number.getPrime(n_length, Random.new().read)
                q = 2 * p + 1

                g = number.getRandomRange(1, q - 1)
                h = number.getRandomRange(1, q - 1)

                # Check if base is invertible.
                _ = pow(g, Encoder.encode(-3.14).encoding, q)
                return Params(g, h, q)
            except ValueError:
                print("Base is not invertible for the given modulus.  Try again...")

    @staticmethod
    def test_params() -> Params:
        """

        :return: Small test parameters
        """
        return Params(102865, 36694, 980621)

    @staticmethod
    def test_params_512() -> Params:
        """
        Uses pre-computed parameters with a key size of 512.
        :return: Param object initialized with pre-computed public parameters for convenience
        """
        g = 11889730920254596991136384241788314999661630288165092110369647505877336036176639309806479135959964501111912698032154716622194612673617552404579490295766011
        h = 13721082471841474053782650376527658902226698803779275803081251834146599392983707257388376495208467011418192733057799717615729343926380163003908539176881432
        q = 14223495415367601756908852384226691325598716430256356503053834868847237340455475240678156383247911042664389551097521654577066252971338460019101596069660055
        return Params(g, h, q)

    @staticmethod
    def test_params_1024() -> Params:
        """
        Uses pre-computed parameters with a key size of 1024.
        :return: Param object initialized with pre-computed public parameters for convenience
        """
        g = 169737938119035520291433213321928254208174029530922290294645519308222641097753823400615247637259913947960902808814275713769926251131627783833274713546658274122188243908383153972707022486434974520420643139511877358958051371697398746787427522680954211581340476069771879396830170599946872888974195406891751227482
        h = 125596906448097600535966632983592858363576772773857923959311953474643935117331001681729633522236596017916779005442577624886139555898375096559401825677298810298181871180099186798838351804035044622026749116828453637913624102482924351923675923500865883794684359787001787724552068174041311223794790580763858614000
        q = 244428918537324404430586689383831513783157358690369038404156978278421102056925749414818109889275479509261544118652217071975873536093065075283235944037807384577354964217610793742094469614331260666377584652650904993950255744537726783748644180225136342865737879727179047760885869334232384412191941651477271264707
        return Params(g, h, q)

    @staticmethod
    def test_params_2048() -> Params:
        """
        Uses pre-computed parameters with a key size of 2048.
        :return: Param object initialized with pre-computed public parameters for convenience
        """
        g = 27757810680022517435258096757525178325966457407302393753978678975454341917021568346638793057222694848518427623202523810289649805252989334482509865686166333694843026462893778479663206583184761108414123339114414918624543967650795378494443991772099068036387532578724971093840257128246094026919023524373241691804050472167011559084541717782829345483393776405960481181528675155465019193279358909729308231454460124742747931136448253808533231237122546863746526335122875163673951430184343593816696784116192050680175257787710521891525931182573989466131925092663036314854755863652112417942064860916878099406191287485147407278690
        h = 4173143344738097374076210176351815781519040026453652180780631709410927324534217036328629647900067553275082590020945259185840031520696799822590859193167981886594748529728617709869864338496315714700608839435201755381890783872576763926037980996038572061205344883140436993275978675751469297151515365909087742581783709703261135190574014860669262982500691568424269957028409766979274209521917958446750989591516029652055084172575098996149052264937552772056291187111061012726111306510377487885272512247918829654261489492568828598465876264387511299462671479213892108540767973041133401728881026076339114867336717825027026252939
        q = 50742555482312783761206817992239125079916382518547943208829302069351558670322469853048680131049031229412549577043550500054967699108041841453016019456092192674228047418313669176231229951332340501924333398391960040126981991688168579251036658417601936669220255701132152858044022612282607211857221968960615230141222056096918266204249811492478939391794810782258252767329782430693124666134948748436426114480876375587010842539091343429693544253095335169581116816445434997224792001745771866622236068811508636230602540849361716995728541053174004737912978024477719106233394404688520988980928204126785580230228484101667011119827
        return Params(g, h, q)
